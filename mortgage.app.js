(self.webpackChunkmortgage_app=self.webpackChunkmortgage_app||[]).push([[942],{6700:(e,s,t)=>{var a={"./af":2786,"./af.js":2786,"./ar":867,"./ar-dz":4130,"./ar-dz.js":4130,"./ar-kw":6135,"./ar-kw.js":6135,"./ar-ly":6440,"./ar-ly.js":6440,"./ar-ma":7702,"./ar-ma.js":7702,"./ar-sa":6040,"./ar-sa.js":6040,"./ar-tn":7100,"./ar-tn.js":7100,"./ar.js":867,"./az":1083,"./az.js":1083,"./be":9808,"./be.js":9808,"./bg":8338,"./bg.js":8338,"./bm":7438,"./bm.js":7438,"./bn":8905,"./bn-bd":6225,"./bn-bd.js":6225,"./bn.js":8905,"./bo":1560,"./bo.js":1560,"./br":1278,"./br.js":1278,"./bs":622,"./bs.js":622,"./ca":2468,"./ca.js":2468,"./cs":5822,"./cs.js":5822,"./cv":877,"./cv.js":877,"./cy":7373,"./cy.js":7373,"./da":4780,"./da.js":4780,"./de":9740,"./de-at":217,"./de-at.js":217,"./de-ch":894,"./de-ch.js":894,"./de.js":9740,"./dv":5300,"./dv.js":5300,"./el":837,"./el.js":837,"./en-au":8348,"./en-au.js":8348,"./en-ca":7925,"./en-ca.js":7925,"./en-gb":2243,"./en-gb.js":2243,"./en-ie":6436,"./en-ie.js":6436,"./en-il":7207,"./en-il.js":7207,"./en-in":4175,"./en-in.js":4175,"./en-nz":6319,"./en-nz.js":6319,"./en-sg":1662,"./en-sg.js":1662,"./eo":2915,"./eo.js":2915,"./es":5655,"./es-do":2088,"./es-do.js":2088,"./es-mx":6112,"./es-mx.js":6112,"./es-us":1146,"./es-us.js":1146,"./es.js":5655,"./et":5603,"./et.js":5603,"./eu":7763,"./eu.js":7763,"./fa":6959,"./fa.js":6959,"./fi":1897,"./fi.js":1897,"./fil":2549,"./fil.js":2549,"./fo":4694,"./fo.js":4694,"./fr":4470,"./fr-ca":3049,"./fr-ca.js":3049,"./fr-ch":2330,"./fr-ch.js":2330,"./fr.js":4470,"./fy":5044,"./fy.js":5044,"./ga":9295,"./ga.js":9295,"./gd":2101,"./gd.js":2101,"./gl":8794,"./gl.js":8794,"./gom-deva":7884,"./gom-deva.js":7884,"./gom-latn":3168,"./gom-latn.js":3168,"./gu":5349,"./gu.js":5349,"./he":4206,"./he.js":4206,"./hi":94,"./hi.js":94,"./hr":316,"./hr.js":316,"./hu":2138,"./hu.js":2138,"./hy-am":1423,"./hy-am.js":1423,"./id":9218,"./id.js":9218,"./is":135,"./is.js":135,"./it":626,"./it-ch":150,"./it-ch.js":150,"./it.js":626,"./ja":9183,"./ja.js":9183,"./jv":4286,"./jv.js":4286,"./ka":2105,"./ka.js":2105,"./kk":7772,"./kk.js":7772,"./km":8758,"./km.js":8758,"./kn":9282,"./kn.js":9282,"./ko":3730,"./ko.js":3730,"./ku":1408,"./ku.js":1408,"./ky":3291,"./ky.js":3291,"./lb":6841,"./lb.js":6841,"./lo":5466,"./lo.js":5466,"./lt":7010,"./lt.js":7010,"./lv":7595,"./lv.js":7595,"./me":9861,"./me.js":9861,"./mi":5493,"./mi.js":5493,"./mk":5966,"./mk.js":5966,"./ml":7341,"./ml.js":7341,"./mn":5115,"./mn.js":5115,"./mr":370,"./mr.js":370,"./ms":9847,"./ms-my":1237,"./ms-my.js":1237,"./ms.js":9847,"./mt":2126,"./mt.js":2126,"./my":6165,"./my.js":6165,"./nb":4924,"./nb.js":4924,"./ne":6744,"./ne.js":6744,"./nl":3901,"./nl-be":9814,"./nl-be.js":9814,"./nl.js":3901,"./nn":3877,"./nn.js":3877,"./oc-lnc":2135,"./oc-lnc.js":2135,"./pa-in":5858,"./pa-in.js":5858,"./pl":4495,"./pl.js":4495,"./pt":9520,"./pt-br":7971,"./pt-br.js":7971,"./pt.js":9520,"./ro":6459,"./ro.js":6459,"./ru":1793,"./ru.js":1793,"./sd":950,"./sd.js":950,"./se":490,"./se.js":490,"./si":124,"./si.js":124,"./sk":4249,"./sk.js":4249,"./sl":4985,"./sl.js":4985,"./sq":1104,"./sq.js":1104,"./sr":9131,"./sr-cyrl":9915,"./sr-cyrl.js":9915,"./sr.js":9131,"./ss":5606,"./ss.js":5606,"./sv":8760,"./sv.js":8760,"./sw":1172,"./sw.js":1172,"./ta":7333,"./ta.js":7333,"./te":3110,"./te.js":3110,"./tet":2095,"./tet.js":2095,"./tg":7321,"./tg.js":7321,"./th":9041,"./th.js":9041,"./tk":9005,"./tk.js":9005,"./tl-ph":5768,"./tl-ph.js":5768,"./tlh":9444,"./tlh.js":9444,"./tr":2397,"./tr.js":2397,"./tzl":8254,"./tzl.js":8254,"./tzm":1106,"./tzm-latn":699,"./tzm-latn.js":699,"./tzm.js":1106,"./ug-cn":9288,"./ug-cn.js":9288,"./uk":7691,"./uk.js":7691,"./ur":3795,"./ur.js":3795,"./uz":6791,"./uz-latn":588,"./uz-latn.js":588,"./uz.js":6791,"./vi":5666,"./vi.js":5666,"./x-pseudo":4378,"./x-pseudo.js":4378,"./yo":5805,"./yo.js":5805,"./zh-cn":3839,"./zh-cn.js":3839,"./zh-hk":5726,"./zh-hk.js":5726,"./zh-mo":9807,"./zh-mo.js":9807,"./zh-tw":4152,"./zh-tw.js":4152};function n(e){var s=i(e);return t(s)}function i(e){if(!t.o(a,e)){var s=new Error("Cannot find module '"+e+"'");throw s.code="MODULE_NOT_FOUND",s}return a[e]}n.keys=function(){return Object.keys(a)},n.resolve=i,e.exports=n,n.id=6700},2679:(e,s,t)=>{"use strict";var a=t(5893),n=t(745),i=t(5998),r=t(427);const d=(0,r.oM)({name:"AmortizationSchedule",initialState:{value:[]},reducers:{setAmortizationSchedule:(e,s)=>{e.value=s.payload}}}),{setAmortizationSchedule:o}=d.actions,l=d.reducer,c=(0,r.xC)({reducer:{amortizationSchedule:l}});var j=t(5697),m=t.n(j),h=t(7294),p=t(381),u=t.n(p);const g=e=>e/100/12,x=(e,s,t)=>{const a=g(s);return e*(a/(1-Math.pow(1+a,-t)))},b=(e,s)=>e*g(s),y=i.I0,v=i.v9,O={data:{interestRate:"",duration:"",capital:"",startDate:u()().format("MM/YYYY"),repayments:[]},setData:()=>{},handleChange:()=>{},addRepayment:()=>{},removeRepayment:()=>{},items:[]},f=(0,h.createContext)(O),k=({children:e,mockData:s})=>{const[t,n]=(0,h.useState)(s?Object.assign(Object.assign({},O.data),s.data):O.data),i=v((e=>e.amortizationSchedule.value)),r=y();(0,h.useEffect)((()=>{const e=(({capital:e,interestRate:s,duration:t,startDate:a,repayments:n})=>{if(""===s||""===e||""===t||parseFloat(e.replace(",","."))<=0||parseFloat(s.replace(",","."))<=0)return null;const i=n.map((e=>{if(e)return Object.assign(Object.assign({},e),{amount:parseFloat(e.amount.replace(",",".")),month:parseInt(e.month)})}));return{interestRate:parseFloat(s.replace(",",".")),capital:parseFloat(e.replace(",",".")),duration:parseInt(t),startDate:a,repayments:i}})(t);if(e){const s=(({interestRate:e,capital:s,duration:t,startDate:a,repayments:n})=>{const i=[];let r=x(s,e,t);for(let d=0;d<t;d+=1){const o=d+1,l=void 0!==n[o]?n[o].amount:0;let c=0,j=r;const m=i[d-1]?i[d-1].residualDebt:s;0!==l&&(r=x(m-l,e,t-o+1),j-=r,c=(t-o+1)*j-l);const h=b(m-l,e),p=r-h,g=(i[d-1]?i[d-1].paidUpCapital:0)+(p+l),y=m-(p+l),v=(i[d-1]?i[d-1].paidUpInterests:0)+h,O=u()(a,"MM/YYYY").add(d,"month").format("MM/YYYY");i[d]={month:o,date:O,installment:r,interestsQuote:h,capitalQuote:p,paidUpCapital:g,residualDebt:y,paidUpInterests:v,repayment:l,repaymentSaving:c}}return i})(e);r(o(s))}else r(o([]))}),[t]);return(0,a.jsx)(f.Provider,Object.assign({value:{data:t,setData:n,handleChange:e=>{const{value:s,name:a,validity:i}=e.target;i.valid&&n(Object.assign(Object.assign({},t),{[a]:s}))},addRepayment:({month:e,amount:s,date:a})=>{const i=[...t.repayments];i[parseInt(e)]={amount:s,date:a,month:e},n(Object.assign(Object.assign({},t),{repayments:i}))},removeRepayment:e=>{const s=[...t.repayments];s.splice(e,1),n(Object.assign(Object.assign({},t),{repayments:s}))},items:i}},{children:e}))};k.propTypes={children:m().element.isRequired,mockData:m().shape({data:m().shape({interestRate:m().string,duration:m().string,capital:m().string,startDate:m().string,repayments:m().arrayOf(m().shape({amount:m().string,date:m().string,month:m().string}))}),setData:m().func,handleChange:m().func,addRepayment:m().func,removeRepayment:m().func,items:m().arrayOf(m().shape({date:m().string,month:m().number,interestsQuote:m().number,capitalQuote:m().number,installment:m().number,paidUpCapital:m().number,residualDebt:m().number,paidUpInterests:m().number}))})};const N=({item:e})=>(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:e.date}),(0,a.jsxs)("td",Object.assign({className:"hide-on-mobile"},{children:[e.interestsQuote.toFixed(2)," €"]})),(0,a.jsxs)("td",Object.assign({className:"hide-on-mobile"},{children:[e.capitalQuote.toFixed(2)," €"]})),(0,a.jsxs)("td",{children:[e.installment.toFixed(2)," €"]}),(0,a.jsxs)("td",{children:[e.paidUpCapital.toFixed(2)," €"]}),(0,a.jsxs)("td",{children:[e.residualDebt.toFixed(2)," €"]}),(0,a.jsxs)("td",{children:[e.paidUpInterests.toFixed(2)," €"]})]},e.date);N.propTypes={item:m().shape({date:m().string.isRequired,month:m().number.isRequired,interestsQuote:m().number.isRequired,capitalQuote:m().number.isRequired,installment:m().number.isRequired,paidUpCapital:m().number.isRequired,residualDebt:m().number.isRequired,paidUpInterests:m().number.isRequired}).isRequired};const C=()=>{const{items:e}=(0,h.useContext)(f);return(0,a.jsxs)("table",{children:[(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:"Month"}),(0,a.jsx)("th",Object.assign({className:"hide-on-mobile"},{children:"Interests quote"})),(0,a.jsx)("th",Object.assign({className:"hide-on-mobile"},{children:"Capital quote"})),(0,a.jsx)("th",{children:"Installment"}),(0,a.jsx)("th",{children:"Paid-up capital"}),(0,a.jsx)("th",{children:"Residual debt"}),(0,a.jsx)("th",{children:"Paid-up interests"})]})}),(0,a.jsx)("tbody",{children:e.length>0?e.map(((e,s)=>(0,a.jsx)(N,{item:e},s))):(0,a.jsx)("tr",Object.assign({className:"empty-table"},{children:(0,a.jsx)("td",Object.assign({colSpan:6},{children:"Fill the form to see the amortization schedule"}))}))})]})},F=[{year:5,months:60},{year:10,months:120},{year:15,months:180},{year:20,months:240},{year:25,months:300},{year:30,months:360},{year:35,months:420},{year:40,months:480}],z=e=>(0,a.jsx)("input",Object.assign({type:"text",pattern:"[0-9]+([,][0-9]{0,2})?"},e));z.propTypes={required:m().bool,placeholder:m().string,name:m().string.isRequired,value:m().string.isRequired,onChange:m().func.isRequired,id:m().string,className:m().string};const R=()=>{const e=F,{handleChange:s,data:t}=(0,h.useContext)(f),{interestRate:n,capital:i,duration:r,startDate:d}=t,o=(()=>{const e=u()(),s=[e.format("MM/YYYY")];for(let t=0;t<13;t++){const t=e.add(1,"month");s.push(t.format("MM/YYYY"))}return s})();return(0,a.jsx)("div",Object.assign({className:"box box-orange"},{children:(0,a.jsxs)("form",{children:[(0,a.jsxs)("div",Object.assign({className:"input-wrapper"},{children:[(0,a.jsx)("label",Object.assign({htmlFor:"input-capital"},{children:"Capital"})),(0,a.jsxs)("div",Object.assign({className:"input-container"},{children:[(0,a.jsx)(z,{placeholder:"Insert your mortgage capital",name:"capital","data-testid":"capital-input",value:i,id:"input-capital",onChange:e=>s(e),required:!0}),(0,a.jsx)("span",{children:"€"})]}))]})),(0,a.jsxs)("div",Object.assign({className:"input-wrapper"},{children:[(0,a.jsx)("label",Object.assign({htmlFor:"input-interest-rate"},{children:"Interest rate"})),(0,a.jsxs)("div",Object.assign({className:"input-container"},{children:[(0,a.jsx)(z,{placeholder:"Insert your mortgage interest rate",name:"interestRate","data-testid":"interest-rate-input",id:"input-interest-rate",value:n,onChange:e=>s(e),required:!0}),(0,a.jsx)("span",{children:"%"})]}))]})),(0,a.jsxs)("div",Object.assign({className:"input-wrapper"},{children:[(0,a.jsx)("label",Object.assign({htmlFor:"input-duration"},{children:"Duration"})),(0,a.jsx)("div",Object.assign({className:"input-container"},{children:(0,a.jsxs)("select",Object.assign({required:!0,"data-testid":"duration-select",name:"duration",id:"input-duration",onChange:e=>s(e),value:r},{children:[(0,a.jsx)("option",Object.assign({value:0},{children:"Choose a duration"}),"option-duration-0"),Object.entries(e).map((([,{months:e,year:s}])=>(0,a.jsxs)("option",Object.assign({value:e},{children:[s," years"]}),`option-duration-${e}`)))]}))}))]})),(0,a.jsxs)("div",Object.assign({className:"input-wrapper"},{children:[(0,a.jsx)("label",Object.assign({htmlFor:"input-start-date"},{children:"Start date"})),(0,a.jsx)("div",Object.assign({className:"input-container"},{children:(0,a.jsxs)("select",Object.assign({name:"startDate",onChange:e=>s(e),value:d,"data-testid":"start-date-select",id:"input-start-date",required:!0},{children:[(0,a.jsx)("option",Object.assign({value:0},{children:"Choose a start date"}),"option-month-0"),o.map((e=>(0,a.jsxs)("option",Object.assign({value:e},{children:[e," "]}),`option-month-${e}`)))]}))}))]}))]})}))},w=()=>{const{items:e,addRepayment:s}=(0,h.useContext)(f),[t,n]=(0,h.useState)(!1),[i,r]=(0,h.useState)([]),[d,o]=(0,h.useState)({date:e.length>0?e[0].date:"",amount:"",month:e.length>0?e[0].month.toString():""});(0,h.useEffect)((()=>{const s=e.filter((e=>e.repayment>0)).map((e=>e.month.toString()));n(s.includes(d.month))}),[d,e]),(0,h.useEffect)((()=>{const s=e.map((e=>({date:e.date,month:e.month})));r(s)}),[e]);const l=e=>{const{value:s,name:t,validity:a}=e.target;a.valid&&o(Object.assign(Object.assign({},d),{[t]:s}))};return(0,a.jsx)(a.Fragment,{children:e.length>0&&(0,a.jsx)("div",Object.assign({id:"form-repayment",className:"box box-orange"},{children:(0,a.jsxs)("form",Object.assign({onSubmit:e=>(e=>{s(d),e.preventDefault()})(e)},{children:[(0,a.jsxs)("div",Object.assign({className:"input-wrapper"},{children:[(0,a.jsx)("label",Object.assign({htmlFor:"input-amount"},{children:"Amount"})),(0,a.jsxs)("div",Object.assign({className:"input-container"},{children:[(0,a.jsx)(z,{placeholder:"Insert a repayment amount",name:"amount",id:"input-amount","data-testid":"amount-input",onChange:e=>l(e),value:d.amount,required:!0}),(0,a.jsx)("span",{children:"€"})]}))]})),(0,a.jsxs)("div",Object.assign({className:"input-wrapper"},{children:[(0,a.jsx)("label",Object.assign({htmlFor:"input-month"},{children:"Month"})),(0,a.jsxs)("select",Object.assign({required:!0,name:"month",id:"input-month","data-testid":"month-input",onChange:e=>l(e),value:d.month},{children:[(0,a.jsx)("option",Object.assign({value:0},{children:"Choose a month"}),"option-month-0"),i.map((e=>(0,a.jsx)("option",Object.assign({value:e.month},{children:e.date}),`option-month-${e.date}`)))]}))]})),(0,a.jsx)("div",Object.assign({className:"input-wrapper"},{children:(0,a.jsx)("input",{role:"button",type:"submit","data-testid":"submit-repayment-input",value:(t?"Update":"Add")+" repayment"})}))]}))}))})},q=()=>(0,a.jsxs)("div",Object.assign({id:"logo"},{children:[(0,a.jsx)("h1",{children:"Mortgage App"}),(0,a.jsx)("h2",{children:"Save on your mortgage"})]})),D=()=>{const{items:e,removeRepayment:s}=(0,h.useContext)(f),t=e.filter((e=>e.repayment>0)),n=t.reduce(((e,s)=>e+s.repayment),0),i=t.reduce(((e,s)=>e+s.repaymentSaving),0);return(0,a.jsx)(a.Fragment,{children:e.length>0&&(0,a.jsxs)("div",Object.assign({id:"box-repayments",className:"box box-orange"},{children:[(0,a.jsx)("ul",{children:t.map((e=>(0,a.jsxs)("li",{children:[(0,a.jsxs)("span",{children:["With a repayment of"," ",(0,a.jsxs)("strong",{children:[e.repayment.toFixed(2)," €"]})," on"," ",(0,a.jsx)("strong",{children:e.date})," you save"," ",(0,a.jsxs)("strong",{children:[e.repaymentSaving.toFixed(2)," €"]})," on interests."]}),(0,a.jsx)("button",Object.assign({onClick:()=>s(e.month)},{children:"x"}))]},`repayment-${e.month}`)))}),(0,a.jsxs)("div",Object.assign({id:"total-repayments"},{children:[(0,a.jsxs)("div",Object.assign({className:"total-repayment"},{children:[(0,a.jsx)("div",{children:"Total repayments"}),(0,a.jsxs)("div",{children:[n.toFixed(2)," €"]})]})),(0,a.jsxs)("div",Object.assign({className:"total-repayment"},{children:[(0,a.jsx)("div",{children:"Total savings"}),(0,a.jsxs)("div",{children:[i.toFixed(2)," €"]})]})),(0,a.jsxs)("div",Object.assign({className:"total-repayment"},{children:[(0,a.jsx)("div",{children:"Percentage"}),(0,a.jsxs)("div",{children:[(i/n*100||0).toFixed(2)," %"]})]}))]}))]}))})},S=()=>(0,a.jsx)("div",Object.assign({className:"empty-message message"},{children:"Fill the form with capital, interest rate and duration to see the amortization schedule. By adding repayments, you can save money on interests!"})),Y=()=>{const{items:e}=(0,h.useContext)(f),{month:s,paidUpInterests:t,paidUpCapital:n}=e.slice(-1).pop(),i=e.filter((e=>e.repayment>0)),r=i.reduce(((e,s)=>e+s.repayment),0),d=i.reduce(((e,s)=>e+s.repaymentSaving),0);return(0,a.jsx)("div",Object.assign({id:"boxes-container",className:"message"},{children:(0,a.jsxs)("div",{children:["On a ",(0,a.jsxs)("strong",{children:["paid-up capital of ",n.toFixed(2)," €"]})," you will pay"," ",(0,a.jsxs)("strong",{children:[t.toFixed(2)," € of interests"]})," in"," ",(0,a.jsxs)("strong",{children:[s," months"]}),". ",(0,a.jsx)("br",{}),"Total amount of interests is"," ",(0,a.jsxs)("strong",{children:[(t/n*100).toFixed(2),"% of capital"]}),"."," ",0===i.length?(0,a.jsx)(a.Fragment,{children:"No repayments were applied."}):(0,a.jsxs)(a.Fragment,{children:["With ",i.length," repayment",i.length>1&&"s",", for a total amount of ",(0,a.jsxs)("strong",{children:[r.toFixed(2)," €"]}),","," ",(0,a.jsxs)("strong",{children:["you can save ",d.toFixed(2)," € on interests"]}),"."," "]}),(0,a.jsx)("br",{}),"Try to update your repayments to see how much you can save."]})}))},I=()=>{const{items:e}=(0,h.useContext)(f);return(0,a.jsx)("div",Object.assign({id:"head-wrapper",className:"box"},{children:0===e.length?(0,a.jsx)(S,{}):(0,a.jsx)(Y,{})}))},M=()=>(0,a.jsx)(i.zt,Object.assign({store:c},{children:(0,a.jsx)(k,{children:(0,a.jsxs)("div",Object.assign({id:"app-container","data-testid":"mortgage-app"},{children:[(0,a.jsxs)("div",Object.assign({className:"row"},{children:[(0,a.jsx)("div",Object.assign({className:"column"},{children:(0,a.jsx)(q,{})})),(0,a.jsx)("div",Object.assign({className:"column"},{children:(0,a.jsx)(I,{})}))]})),(0,a.jsxs)("div",Object.assign({className:"row"},{children:[(0,a.jsxs)("div",Object.assign({className:"column"},{children:[(0,a.jsx)(R,{}),(0,a.jsx)(w,{}),(0,a.jsx)(D,{})]})),(0,a.jsx)("div",Object.assign({className:"column"},{children:(0,a.jsx)(C,{})}))]}))]}))})})),U=document.getElementById("mortgage-app");(0,n.s)(U).render((0,a.jsx)(M,{}))}},e=>{e.O(0,[546],(()=>{return s=2679,e(e.s=s);var s}));e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,